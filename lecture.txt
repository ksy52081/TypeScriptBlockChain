#1.5 타입스크립트가 존재하는 이유?
왜 JS 에서 TS로 오는가? 
안정성!
특히 타입 안정성 덕분에 타입스크립트의 장점을 이용할 수 있다.

코드의 버그를 혁신적으로 줄여준다.
자바스크립트는 이해해주려고 한다.
에러를 보여주지 않으려고 노력한다.

예시 
[1,2,3,4] + false
=> '1,2,3,4false'
배열이 문자열이 되어버리고
false라는 boolean도 문자열이 되어버린다!

예시 2

function divide(a,b) {
    return a/b
}

divide(2,3) 
같은 상황일 때 나눗셈을 하기를 기대하고 만든다.

하지만
divide("xxxxx") 와 같이 숫자도 아니고, 인자가 하나밖에 없을 때에도
-> NaN
값을 띄울 뿐 코드 실행 자체를 막아주지 않는다.

예시 3 : 런타임 에러 (콘솔 안에서 발생하는 에러 ~ 유저의 컴퓨터에서 코드가 실행될 때에만 일어나는 에러일 수도 있다)

const nico = {name : "nico"}

nico.hello();
-> Uncauhgt TypeError: nico.hello is not a function

하지만~ 이런 에러는 코드를 실행 하기 전에 최소화 할 수 있는 에러 중 하나이다.
nico 안에 hello 라는 함수가 정의되지 않았음을 누가 봐도 알지만
자바스크립트는 에러날 거라는 걸 몰라서 직접 돌리고 나서야
"아, 잘못되었구나"를 안다는 거다.